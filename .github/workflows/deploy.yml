name: Deploy

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: aws
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script_stop: true
          script: |
            set -euo pipefail

            # Resolve deploy path (fallback to ~/speech-to-text-service)
            DEPLOY_PATH="${{ secrets.DEPLOY_PATH }}"
            DEPLOY_PATH="${DEPLOY_PATH:-$HOME/speech-to-text-service}"
            cd "$DEPLOY_PATH"

            # Optional: keep local checkout fresh if you build on server
            if [ -d .git ]; then
              git fetch origin main
              git reset --hard origin/main
            fi

            # Login to GHCR on the remote host using a PAT
            echo "${{ secrets.GHCR_TOKEN }}" | sudo docker login ghcr.io -u "${{ secrets.GHCR_USER }}" --password-stdin

            # Pull and restart using Compose (support v2 and legacy)
            if command -v docker >/dev/null 2>&1 && docker compose version >/dev/null 2>&1; then
              sudo docker compose pull
              sudo docker compose up -d --remove-orphans
              sudo docker compose ps
            else
              sudo docker-compose pull
              sudo docker-compose up -d --remove-orphans
              sudo docker-compose ps
            fi

            # Clean up old images
            sudo docker image prune -af

            echo "Deployment completed successfully!"
